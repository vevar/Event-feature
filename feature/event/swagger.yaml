openapi: 3.0.0
info:
  description: "Event service"
  version: "1.0.0"
  title: "Event service"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "alxminyaev@gmail.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
# host: "0.0.0.0"
# basePath: "/auth"

servers:
  - url: "http://5.130.14.37:8080/event"
  - url: "http://localhost/event"
tags:
  - name: "OutStudyEvent"
    description: "Разовое мероприятие"
    externalDocs:
      description: "Find out more"
      url: "shorturl.at/bjwU5"
  - name: "OutStudyEventKind"
    description: "Вид мероприятия"
    externalDocs:
      description: "Find out more"
      url: "shorturl.at/bjwU5"
  - name: "RequestOutStudyEvent"
    description: "Запрос на подтверждение участия в мероприятии"
    externalDocs:
      description: "Find out more"
      url: "shorturl.at/bjwU5"


paths:
  /api/v1/outstudy-event:
    post:
      tags:
        - "OutStudyEvent"
      summary: "Create outstudy-event (Создать внеучебное мероприятие) "
      description: ""
      operationId: "postOutStudyEvent"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OutStudyEventPostRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntityIntCreatedResponse"
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: "Forbidden"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "422":
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    get:
      tags:
        - "OutStudyEvent"
      summary: "Get list of outstudy-events (Получить список внеучебных мероприятий)"
      description: ""
      operationId: "getOutStudyEvents"
      parameters:
        - in: query
          required: true
          name: offset
          schema:
            type: integer
            format: int64
          description: The number of items to skip before starting to collect the result set
        - in: query
          required: true
          name: limit
          schema:
            type: integer
            format: int32
          description: The numbers of items to return
        - in: query
          name: dateStart
          schema:
            type: "string"
            format: "date-time"
            description: "UTC"
        - in: query
          name: dateEnd
          schema:
            type: "string"
            format: "date-time"
            description: "UTC"
        - in: query
          name: status
          schema:
            type: "integer"
            format: "int64"
        - in: query
          name: isConfirmed
          schema:
            type: "boolean"
        - in: query
          name: memberId
          schema:
            type: "integer"
            format: "int64"
        - in: query
          name: organizerId
          schema:
            type: "integer"
            format: "int64"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OutStudyEventListResponse"

  /api/v1/outstudy-event/{id}:
    get:
      tags:
        - "OutStudyEvent"
      summary: "Get outstudy-event by id (Получить внеучебное мероприятие по id)"
      description: ""
      operationId: "getByOutStudyEventId"
      parameters:
        - name: id
          in: path
          description: ID of object to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OutStudyEventGetResponse"
        "404":
          description: "Not found"
    delete:
      tags:
        - "OutStudyEvent"
      summary: "delete outstudy-event by id (удалить внеучебное мероприятие по id)"
      description: ""
      operationId: "deleteEventByOutStudyEventId"
      parameters:
        - name: id
          in: path
          description: ID of object to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
        "404":
          description: "Not found"
        "401":
          description: "Unauthorized"
    put:
      tags:
        - "OutStudyEvent"
      summary: "Update outstudy-event (Not implemented, HIGH Priority)"
      description: ""
      operationId: "updateByOutStudyEventId"
      parameters:
        - name: id
          in: path
          description: ID of object to update
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OutStudyEventPostRequest'
      responses:
        '200':
          description: OK
        "404":
          description: "Not found"
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: "Forbidden"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "422":
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /api/v1/outstudy-event/{id}/members:
    get:
      tags:
        - "OutStudyEvent"
      summary: "Get members of outstudy-event by id (Получить список участников внеучебного мероприятия)"
      description: ""
      operationId: "getMembersOfOutStudyEventById"
      parameters:
        - name: id
          in: path
          description: ID of object to return
          required: true
          schema:
            type: integer
            format: int64
        - in: query
          required: true
          name: offset
          schema:
            type: integer
            format: int64
          description: The number of items to skip before starting to collect the result set
        - in: query
          required: true
          name: limit
          schema:
            type: integer
            format: int32
          description: The numbers of items to return
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MembersOfOutStudyEvent"
        "404":
          description: "Not found"
  /api/v1/outstudy-event/{id}/registration:
    post:
      tags:
        - "OutStudyEvent"
      summary: "User registration in outstudy-event (Зарегистрировать на внеучебном мероприятии)"
      description: ""
      operationId: "postRegistrationByOutStudyEventId"
      parameters:
        - name: id
          in: path
          description: ID of outstudy-event
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
        "404":
          description: "Not found"
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: "Forbidden"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    delete:
      tags:
        - "OutStudyEvent"
      summary: "Deleting of user registration in outstudy-event (Удалить регистрацию на мероприятии)"
      description: ""
      operationId: "deleteRegistrationByOutStudyEventId"
      parameters:
        - name: id
          in: path
          description: ID of outstudy-event
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
        "404":
          description: "Not found"
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: "Forbidden"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /api/v1/outstudy-event/{eventId}/reward:
    post:
      tags:
        - "OutStudyEvent"
      summary: "Наградить пользователей по критериям"
      operationId: postOutStudyEventIdReward
      parameters:
        - name: eventId
          in: path
          description: ID of outstudy-event
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RewardsListCriterionUsersRequest'
      responses:
        '200':
          description: OK
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: "Forbidden"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /api/v1/outstudy-event/{eventId}/request:
    get:
      tags:
        - "RequestOutStudyEvent"
      summary: "Получить список заявок на участие в мероприятие"
      operationId: getRequestsOutStudyEvents
      parameters:
        - name: eventId
          in: path
          description: ID of outstudy-event
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RequestListOutStudyEventResponse"
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: "Forbidden"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /api/v1/outstudy-event/{eventId}/request/{requestId}:
    put:
      tags:
        - "RequestOutStudyEvent"
      summary: "Change request in outstudy-event (Изменить статус запроса на участие)"
      description: ""
      operationId: "postConfirmationByOutStudyEventId"
      parameters:
        - name: eventId
          in: path
          description: ID of outstudy-event
          required: true
          schema:
            type: integer
            format: int64
        - name: requestId
          in: path
          description: ID of request in outstudy-event
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestOutStudyEventApi'
      responses:
        '200':
          description: OK
        "404":
          description: "Not found"
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: "Forbidden"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /api/v1/outstudy-eventkind:
    post:
      tags:
        - "OutStudyEventKind"
      summary: "Create OutStudyEventKind object"
      description: ""
      operationId: "postOutStudyEventKind"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OutStudyEventKindPostRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntityIntCreatedResponse"
        "404":
          description: "Not found"
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: "Forbidden"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    get:
      tags:
        - "OutStudyEventKind"
      summary: "Get list of OutStudyEventKinds"
      description: ""
      operationId: "getOutStudyEventKinds"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EventKindListOutStudyGetResponse"


  /api/v1/outstudy-eventkind/{id}:
    delete:
      tags:
        - "OutStudyEventKind"
      summary: "OutStudyEvent kind by id (удалить вид мероприятия по id)"
      description: ""
      operationId: "deleteByOutStudyEventKindId"
      parameters:
        - name: id
          in: path
          description: ID of outstudy-event
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
        "404":
          description: "Not found"
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: "Forbidden"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

components:
  schemas:
    OutStudyEventPostRequest:
      type: object
      required:
        - name
        - address
        - outstudyEventKindId
        - status
        - dateStart
        - dateEnd
      properties:
        name:
          type: "string"
        description:
          type: "string"
        address:
          type: "string"
        dateStart:
          type: "string"
          description: "UTC"
          example: "2020-12-27T08:40:07.914Z"
        dateEnd:
          type: "string"
          description: "UTC"
          example: "2020-12-27T08:40:07.914Z"
        dateRegistrationEnd:
          type: "string"
          description: "UTC"
          example: "2020-12-27T08:40:07.914Z"
        outstudyEventKindId:
          type: integer
          format: int32
        maxMembers:
          type: integer
          format: int32
          description: "-1 - not defended value"
        minMembers:
          type: integer
          format: int32
          description: "-1 - not defended value"
        status:
          type: integer
          format: int32
        isNeedMemberConfirmation:
          type: boolean
    MembersOfOutStudyEvent:
      type: object
      properties:
        size:
          type: integer
          format: int64
        data:
          type: array
          items:
            $ref: "#/components/schemas/UserApiEntity"

    RewardCriterionUsersRequest:
      type: object
      required:
        - criterionId
        - usersIds
      properties:
        criterionId:
          type: integer
          format: int64
        usersIds:
          type: array
          items:
            type: integer
            format: int64

    RewardsListCriterionUsersRequest:
      type: object
      required:
        - data
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/RewardCriterionUsersRequest"

    OutStudyEventGetResponse:
      type: object
      required:
        - id
        - name
        - address
        - outstudyEventKind
        - status
        - isNeedMemberConfirmation
        - organizer
        - dateStart
        - dateEnd
        - chat
      properties:
        id:
          type: integer
          format: "int64"
        name:
          type: "string"
        description:
          type: "string"
        address:
          type: "string"
        dateStart:
          type: "string"
          description: "UTC"
          example: "2020-12-27T08:40:07.914Z"
        dateEnd:
          type: "string"
          description: "UTC"
          example: "2020-12-27T08:40:07.914Z"
        dateRegistrationEnd:
          type: "string"
          description: "UTC"
          example: "2020-12-27T08:40:07.914Z"
        eventKindId:
          type: integer
          format: int32
        maxMembers:
          type: integer
          format: int32
        minMembers:
          type: integer
          format: int32
        status:
          type: integer
          format: int32
        isNeedMemberConfirmation:
          type: boolean
        isConfirmed:
          type: boolean
        organizer:
          $ref: "#/components/schemas/OrganizerResponse"
        chat:
          $ref: "#/components/schemas/ChatResponse"

    OutStudyEventGetResponseWithMembers:
      type: object
      properties:
        event:
          $ref: "#/components/schemas/OutStudyEventGetResponse"
        members:
          type: array
          items:
            $ref: "#/components/schemas/MemberResponse"

    OutStudyEventListResponse:
      type: object
      required:
        - size
        - data
      properties:
        size:
          type: integer
          format: int64
        data:
          type: array
          items:
            $ref: "#/components/schemas/OutStudyEventGetResponse"

    OutStudyEventKindPostRequest:
      type: object
      required:
        - name
      properties:
        name:
          type: "string"
        criteria:
          type: array
          items:
            $ref: '#/components/schemas/OutStudyEventCriterionPostRequest'

    EventKindOutStudyGetResponse:
      type: object
      required:
        - id
        - name
        - criteria
      properties:
        id:
          type: integer
          format: int32
        name:
          type: "string"
        criteria:
          type: array
          items:
            $ref: '#/components/schemas/OutStudyEventCriteria'

    EventKindListOutStudyGetResponse:
      type: object
      required:
        - data
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/EventKindOutStudyGetResponse"

    OutStudyEventCriteria:
      required:
        - id
        - name
        - value
        - typeId
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        value:
          type: integer
          format: int32
        typeId:
          type: integer
          format: int32
          description: "1: ALL, 2: BY_RATING_PLACE, 3: CUSTOM"
        bottomPlace:
          type: integer
          format: int32
        topPlace:
          type: integer
          format: int32
    OutStudyEventCriterionPostRequest:
      required:
        - value
        - typeId
      type: object
      properties:
        name:
          type: string
        value:
          type: integer
          format: int32
        typeId:
          type: integer
          format: int32
          description: "1: ALL, 2: BY_RATING_PLACE, 3: CUSTOM"
        bottomPlace:
          type: integer
          format: int32
        topPlace:
          type: integer
          format: int32
    UserKeysApiModel:
      type: object
      required:
        - userId
      properties:
        userId:
          type: integer
          format: int64
          description: "User id"
    RequestOutStudyEventApi:
      type: object
      required:
        - status
      properties:
        status:
          type: integer
          format: int32
          description: "1: IN_PROCESS, 2: ACCEPT, 3: REJECT"
    ErrorResponse:
      type: object
      required:
        - message
      properties:
        field:
          type: "string"
        message:
          type: "string"

    EntityIntCreatedResponse:
      type: object
      required:
        - id
      properties:
        id:
          type: "integer"
          format: "int32"
    EntityLongCreatedResponse:
      type: object
      required:
        - id
      properties:
        id:
          type: "integer"
          format: "int64"

    OrganizerResponse:
      type: object
      required:
        - user
      properties:
        user:
          $ref: '#/components/schemas/UserApiEntity'

    MemberResponse:
      type: object
      required:
        - user
      properties:
        user:
          $ref: '#/components/schemas/UserApiEntity'

    RequestOutStudyResponse:
      type: object
      required:
        - id
        - status
        - user
      properties:
        id:
          type: integer
          format: int64
        status:
          type: integer
          format: int32
          description: "1: IN_PROCESS, 2: ACCEPT, 3: REJECT"
        outStudyEventId:
          type: integer
          format: int64
        user:
          $ref: '#/components/schemas/UserApiEntity'
    RequestListOutStudyEventResponse:
      type: object
      required:
        - data
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/RequestOutStudyResponse"

    UserApiEntity:
      type: object
      required:
        - id
        - roles
        - profile
      properties:
        id:
          type: integer
          format: int64
        roles:
          type: array
          items:
            type: integer
        profile:
          $ref: '#/components/schemas/ProfileApiModel'


    ProfileApiModel:
      type: object
      required:
        - firstName
        - lastName
      properties:
        firstName:
          type: "string"
        lastName:
          type: "string"
        middleName:
          type: "string"
    ChatResponse:
      type: object
      required:
        - id
        - name
        - type
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        type:
          type: integer
          format: int32

externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"