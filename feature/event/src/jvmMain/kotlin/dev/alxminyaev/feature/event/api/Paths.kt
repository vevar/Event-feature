/**
 * Event service
 * Event service
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: alxminyaev@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package dev.alxminyaev.feature.event.api

import io.ktor.locations.KtorExperimentalLocationsAPI
import io.ktor.locations.Location

object Paths {
    /**
     * delete outstudy-event by id (удалить внеучебное мероприятие по id)
     *
     * @param id ID of object to delete
     */
    @KtorExperimentalLocationsAPI
    @Location("/api/v1/outstudy-event/{id}")
    class deleteEventByOutStudyEventId(val id: kotlin.Long)

    /**
     * Deleting of user registration in outstudy-event (Удалить регистрацию на мероприятии)
     *
     * @param id ID of outstudy-event
     */
    @KtorExperimentalLocationsAPI
    @Location("/api/v1/outstudy-event/{id}/registration")
    class deleteRegistrationByOutStudyEventId(val id: kotlin.Long)

    /**
     * Get outstudy-event by id (Получить внеучебное мероприятие по id)
     *
     * @param id ID of object to return
     */
    @KtorExperimentalLocationsAPI
    @Location("/api/v1/outstudy-event/{id}")
    class getByOutStudyEventId(val id: kotlin.Long)

    /**
     * Get members of outstudy-event by id (Получить список участников внеучебного мероприятия)
     *
     * @param id ID of object to return
     * @param offset The number of items to skip before starting to collect the result set
     * @param limit The numbers of items to return
     */
    @KtorExperimentalLocationsAPI
    @Location("/api/v1/outstudy-event/{id}/members")
    class getMembersOfOutStudyEventById(val id: kotlin.Long, val offset: kotlin.Long, val limit: kotlin.Int)

    /**
     * Get list of outstudy-events (Получить список внеучебных мероприятий)
     *
     * @param offset The number of items to skip before starting to collect the result set
     * @param limit The numbers of items to return
     * @param dateStart  (optional)
     * @param dateEnd  (optional)
     * @param status  (optional)
     * @param isConfirmed  (optional)
     * @param memberId  (optional)
     * @param organizerId  (optional)
     */
    @KtorExperimentalLocationsAPI
    @Location("/api/v1/outstudy-event")
    class getOutStudyEvents(
        val offset: kotlin.Long,
        val limit: kotlin.Int,
        val dateStart: String? = null,
        val dateEnd: String? = null,
        val status: kotlin.Int? = null,
        val isConfirmed: kotlin.Boolean? = null,
        val organizerId: kotlin.Long? = null,
        val memberId: Long? = null
    )

    /**
     * OutStudyEvent kind by id (удалить вид мероприятия по id)
     *
     * @param id ID of outstudy-event
     */
    @KtorExperimentalLocationsAPI
    @Location("/api/v1/outstudy-eventkind/{id}")
    class deleteByOutStudyEventKindId(val id: kotlin.Int)

    /**
     * Get list of OutStudyEventKinds
     *
     */
    @KtorExperimentalLocationsAPI
    @Location("/api/v1/outstudy-eventkind")
    class getOutStudyEventKinds()

    /**
     * Получить список заявок на участие в мероприятие
     *
     * @param eventId ID of outstudy-event
     */
    @KtorExperimentalLocationsAPI
    @Location("/api/v1/outstudy-event/{eventId}/request")
    class getRequestsOutStudyEvents(val eventId: kotlin.Long)

    /**
     * Get user top board
     *
     * @param eventId ID of object to return
     */
    @KtorExperimentalLocationsAPI
    @Location("/api/v1/outstudy-event/{eventId}/user-top-board")
    class getUserTopBoardByEventId(val eventId: kotlin.Long)

}
