/**
 * Event service
 * Event service
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: alxminyaev@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package dev.alxminyaev.feature.event.api.apis


import com.alxminyaev.tool.error.exceptions.NotFoundException
import com.alxminyaev.tool.error.exceptions.ValidationDataException
import com.google.gson.Gson
import dev.alxminyaev.feature.event.api.Paths
import dev.alxminyaev.feature.event.repository.OutStudyUserTopBoardRepository
import io.ktor.application.*
import io.ktor.http.*
import io.ktor.locations.*
import io.ktor.request.*
import io.ktor.response.*
import io.ktor.routing.*
import org.kodein.di.instance
import org.kodein.di.ktor.di

@KtorExperimentalLocationsAPI
fun Route.TopBoardApi() {
    val gson = Gson()
    val empty = mutableMapOf<String, Any?>()

    get<Paths.getUserTopBoardByEventId> { param: Paths.getUserTopBoardByEventId ->
        val outStudyUserTopBoardRepository by di().instance<OutStudyUserTopBoardRepository>()
        call.respond(outStudyUserTopBoardRepository.findByEventId(param.eventId) ?: throw NotFoundException())
    }


    route("/api/v1/outstudy-event/{eventId}/user-top-board") {
        put {
            val outStudyUserTopBoardRepository by di().instance<OutStudyUserTopBoardRepository>()
            call.respond(
                outStudyUserTopBoardRepository.updateByEventId(
                    call.receive(),
                    call.parameters["eventId"]?.toLongOrNull() ?: throw ValidationDataException()
                )
            )

        }
    }

}
